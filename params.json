{
  "name": "Amity-space-allocation",
  "tagline": "Repo to contain information about Amity Office and Livingspace allocation system.",
  "body": "\r\n## Amit Space Allocation System\r\n\r\nAmity is an [Andela](http://andela.com) facility that has several rooms in it. A room can be\r\neither a **Living Space** or an **Office Space**. An Office Space can accomodate a maximum of\r\n6 people and the Living Space can accomodate a maximum of 4 at ago.  \r\n\r\nThe Amity Space Allocation allocate people either The Living Space or The Office Space randomly  \r\n\r\nA room can be allocated to a staff or a fellow at Andela.Staff cannot be allocated living spaces.\r\n Fellows have a choice to choose a living space or not. \r\n\r\n### Installation\r\nClone `git clone https://github.com/andela-dmigwi/amity-space-allocation.git`\r\n\r\n### Virtual Environment\r\nNavigate to the root folder `amity-room-allocation` and:\r\n - Install virtual environment `virtualenv --python=python3 a-venv` \r\n - Activate it by `source a-venv/bin/activate`\r\n \r\n### Run the Test\r\n run `nosetests`\r\n\r\n### Run the system \r\n run `interactive.py --interactive` or `interactive.py -i`\r\n\r\n\r\n# Usage\r\n \r\n## Create Room\r\n`create_room <room_name>...`  \r\n - Creates rooms in Amity. This command allows one to create room  \r\n   single room: `create_room Dojo` -> Create room called **Dojo**  \r\n   multiple rooms: `create_room Dojo,Krypton,Valhala` -> Creates three rooms: **Dojo**, **Krypton** and **Valhala**\r\n\r\n - After typing the create command, you will be prompted to type:  \r\n   `O` for Office   \r\n          or    \r\n   `L` for Living Space  \r\n\r\n *This will be done for every room you create*\r\n\r\n\r\n## Add Person\r\n `add_person <person_name> <FELLOW|STAFF> [wants_accommodation]`\r\n - Adds a person to the system and allocates the person to a random room. wants_accommodation here is an optional argument which can be either ``Y`` or ``N``.  \r\nThe default value if it is not provided is N.  \r\n\r\n## Reallocate Person\r\n `reallocate_person <person_identifier> <new_room_name>`\r\n - Reallocate the person with person_name to new_room_name.\r\n\r\n## Load People\r\n`load_people `\r\n- Adds people to rooms from a txt file.  \r\n    \r\n    ``OLUWAFEMI FELLOW Y``\r\n\r\n    ``DOMINIC STAFF``\r\n \r\n    ``PATTERSON FELLOW Y``\r\n \r\n    ``DOMINIC STAFF`` \r\n    \r\n    ``PATTERSON FELLOW Y``\r\n    \r\n    ``LAWRENCE FELLOW Y``\r\n\r\n\r\n## Print Allocations\r\n`print_allocations [filename]`\r\n - Prints a list of allocations onto the screen. The file name is optional, if its not provided, data is not printed in a file.  \r\n  \r\n    ``ROOM NAME``\r\n\r\n    ``-------------------------------------``\r\n    \r\n    ``-------------------------------------``\r\n\r\n    ``MEMBER 1, MEMBER 2, MEMBER 3``\r\n   \r\n    ``ROOM NAME``\r\n\r\n    ``-------------------------------------``\r\n    \r\n    ``-------------------------------------``\r\n    \r\n    ``MEMBER 1, MEMBER 2``\r\n  \r\n\r\n## Print Unallocated\r\n`print_unallocated [filename]`\r\n - Prints a list of unallocated rooms to the screen. The file name is optional, if its not provided, data is not printed in a file.\r\n\r\n## Print Room\r\n`print_room <room_name>`\r\n - Prints the names of all the people in ``room_name`` on the screen.\r\n\r\n## Save State\r\n`save_state `\r\n - Persists all the data stored in the app to a SQLite database. Retrieves all the data held in the application and saves it in the database\r\n\r\n## Load State\r\n`load_state `\r\n - Loads data from a database into the application.\r\n\r\n**@Done By Migwi-Ndung'u**\r\n[my github repo](http://www.github.com/andela-dmigwi)\r\n\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}